[debug] [2020-10-27T03:17:31.972Z] ----------------------------------------------------------------------
[debug] [2020-10-27T03:17:31.974Z] Command:       /usr/bin/node /usr/bin/firebase init
[debug] [2020-10-27T03:17:31.975Z] CLI Version:   8.14.0
[debug] [2020-10-27T03:17:31.975Z] Platform:      linux
[debug] [2020-10-27T03:17:31.975Z] Node Version:  v14.14.0
[debug] [2020-10-27T03:17:31.975Z] Time:          Mon Oct 26 2020 21:17:31 GMT-0600 (hora estándar central)
[debug] [2020-10-27T03:17:31.975Z] ----------------------------------------------------------------------
[debug] [2020-10-27T03:17:31.976Z] 
[debug] [2020-10-27T03:17:31.984Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-10-27T03:17:31.984Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /home/jcmelchorp/beaverNet/github/jcmelchorp/proyecto-calli

Before we get started, keep in mind:

  * You are initializing in an existing Firebase project directory

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2020-10-27T03:17:38.872Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2020-10-27T03:17:39.220Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Tue, 27 Oct 2020 03:17:39 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  Using project proyecto-calli (calli) 
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2020-10-27T03:17:42.359Z] >>> HTTP REQUEST GET https://proyecto-calli.firebaseio.com/.settings/rules.json  
 
[debug] [2020-10-27T03:17:42.674Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Tue, 27 Oct 2020 03:17:42 GMT","content-type":"application/json; charset=utf-8","content-length":"123","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] ✔  Database Rules for proyecto-calli have been downloaded to database.rules.json. 
[info] Future modifications to database.rules.json will update Database Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2020-10-27T03:17:42.680Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/proyecto-calli/services/firestore.googleapis.com  
 
[debug] [2020-10-27T03:17:43.137Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Tue, 27 Oct 2020 03:17:43 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-27T03:17:43.138Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/proyecto-calli  
 
[debug] [2020-10-27T03:17:43.550Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Tue, 27 Oct 2020 03:17:43 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-27T03:17:43.551Z] database_type: CLOUD_FIRESTORE
[debug] [2020-10-27T03:17:43.551Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-10-27T03:17:43.552Z] > authorizing via signed-in user
[debug] [2020-10-27T03:17:43.552Z] [iam] checking project proyecto-calli for permissions ["firebase.projects.get"]
[debug] [2020-10-27T03:17:43.553Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/proyecto-calli:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-10-27T03:17:44.133Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Tue, 27 Oct 2020 03:17:44 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=364","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-10-27T03:17:44.734Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/proyecto-calli/releases?pageSize=10&pageToken=  
 
[debug] [2020-10-27T03:17:45.083Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Tue, 27 Oct 2020 03:17:45 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-27T03:17:45.084Z] Found ruleset: projects/proyecto-calli/rulesets/2a544331-1cb0-4f15-b8b4-42bd0b4ce149
[debug] [2020-10-27T03:17:45.085Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/proyecto-calli/rulesets/2a544331-1cb0-4f15-b8b4-42bd0b4ce149  
 
[debug] [2020-10-27T03:17:45.291Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Tue, 27 Oct 2020 03:17:45 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-10-27T03:17:46.051Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/proyecto-calli/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2020-10-27T03:17:46.052Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/proyecto-calli/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2020-10-27T03:17:46.429Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Tue, 27 Oct 2020 03:17:46 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-10-27T03:17:46.700Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Tue, 27 Oct 2020 03:17:46 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2020-10-27T03:19:35.988Z] >>> HTTP REQUEST GET https://www.gstatic.com/firebasejs/releases.json  
 
[debug] [2020-10-27T03:19:36.159Z] <<< HTTP RESPONSE 200 {"accept-ranges":"bytes","vary":"Accept-Encoding, Origin","content-type":"application/json","content-length":"1411","date":"Tue, 27 Oct 2020 03:19:36 GMT","expires":"Tue, 27 Oct 2020 04:09:36 GMT","cache-control":"public, max-age=3000","last-modified":"Mon, 26 Oct 2020 20:17:36 GMT","x-content-type-options":"nosniff","server":"sffe","x-xss-protection":"0","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""}
[info] ✔  Wrote dist/calli/index.html 
[info] 
[info] i  Detected a .git folder at /home/jcmelchorp/beaverNet/github/jcmelchorp/proyecto-calli 
[info] i  Authorizing with GitHub to upload your service account to a GitHub repository's secrets store. 
[info] 
[info] Visit this URL on this device to log in:
[info] https://github.com/login/oauth/authorize?client_id=89cf50f02ac6aaed3484&state=5480097&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo
[info] 
[info] Waiting for authentication...
[debug] [2020-10-27T03:19:41.291Z] >>> HTTP REQUEST POST https://github.com/login/oauth/access_token  
 {"client_id":"89cf50f02ac6aaed3484","client_secret":"3330d14abc895d9a74d5f17cd7a00711fa2c5bf0","code":"b6d7fec339e4cd23359e","redirect_uri":"http://localhost:9005","state":"5480097"}
[debug] [2020-10-27T03:19:41.758Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Tue, 27 Oct 2020 03:19:41 GMT","content-type":"application/json; charset=utf-8","transfer-encoding":"chunked","status":"200 OK","vary":"X-PJAX, Accept-Encoding, Accept, X-Requested-With","etag":"W/\"a8e85c737d97e6dda3153ebfc1249b4d\"","cache-control":"max-age=0, private, must-revalidate","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","expect-ct":"max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"","content-security-policy":"default-src 'none'; base-uri 'self'; block-all-mixed-content; connect-src 'self' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events wss://alive.github.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; manifest-src 'self'; media-src 'none'; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/socket-worker.js gist.github.com/socket-worker.js","x-github-request-id":"837E:0C56:1FF8925:3418BE2:5F9791CD"}
[debug] [2020-10-27T03:19:41.759Z] >>> HTTP REQUEST GET https://api.github.com/user  
 
[debug] [2020-10-27T03:19:42.296Z] <<< HTTP RESPONSE 200 {"server":"GitHub.com","date":"Tue, 27 Oct 2020 03:19:42 GMT","content-type":"application/json; charset=utf-8","content-length":"1447","status":"200 OK","cache-control":"private, max-age=60, s-maxage=60","vary":"Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With","etag":"\"a3e6259e2e503933a263a9932e00179fb8c1e80692d5b8109e16c188358d507a\"","last-modified":"Fri, 23 Oct 2020 01:38:12 GMT","x-oauth-scopes":"read:user, repo","x-accepted-oauth-scopes":"","x-oauth-client-id":"89cf50f02ac6aaed3484","x-github-media-type":"github.v3","x-ratelimit-limit":"5000","x-ratelimit-remaining":"4999","x-ratelimit-reset":"1603772382","x-ratelimit-used":"1","access-control-expose-headers":"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset","access-control-allow-origin":"*","strict-transport-security":"max-age=31536000; includeSubdomains; preload","x-frame-options":"deny","x-content-type-options":"nosniff","x-xss-protection":"1; mode=block","referrer-policy":"origin-when-cross-origin, strict-origin-when-cross-origin","content-security-policy":"default-src 'none'","x-github-request-id":"920A:22E5:12C94D:35B162:5F9791CD"}
[info] 
[info] ✔  Success! Logged into GitHub as jcmelchorp 
[info] 
